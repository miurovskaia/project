version: "3.8"
services:

  db:
    image: postgres
    container_name: postgres_docker_composeee
    restart: always
    volumes:
      - C:\Users\miurovskaia\Documents\study_postgres_datapart4:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: dbb
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: 321
    ports:
      - "5432:5432"


  backend:
    image: springboot-app
    build: ./demo
    container_name: testapp_container
    ports:
      - 8089:8089
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://db:5432/dbb
      SPRING_DATASOURCE_USERNAME: admin
      SPRING_DATASOURCE_PASSWORD: 321
    depends_on:
      - db
    restart: always
    

  backendTarriffs:
    image: springboot-app-tariff
    build: C:\Users\miurovskaia\Documents\учебный_проект\tariffs\demo
    container_name: testapp_container_tariff
    ports:
      - 8091:8091
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://db:5432/dbb
      SPRING_DATASOURCE_USERNAME: admin
      SPRING_DATASOURCE_PASSWORD: 321
    depends_on:
      - db
    restart: always
    
  backendAPI:
    image: springboot-app-api
    build: C:\Users\miurovskaia\Documents\учебный_проект\APIClientService
    container_name: testapp_container_API
    ports:
      - 8092:8092
    depends_on:
      - db
    restart: always   

  backendProducts:
    image: springboot-app-product
    build: C:\Users\miurovskaia\Documents\учебный_проект\product\demo
    container_name: testapp_container_product
    ports:
      - 8093:8093
    depends_on:
      - db
    restart: always     
    
    

        

    

